@inject NavigationManager NavigationManager
@inject ApplicationAuthenticationStateProvider AuthenticationStateProvider
@inject ILocalStorageService LocalStorage

<AuthorizeView>
    <NotAuthorized>
        <ul class="navbar-nav ml-auto nav-flex-icons">
            <li class="nav-item">
                <NavLink class="nav-link" href="auth/login">
                    <span class="oi oi-account-login" aria-hidden="true"></span> Login
                </NavLink>
            </li>
        </ul>
    </NotAuthorized>
    <Authorized>
        <ul class="navbar-nav ml-auto nav-flex-icons">
            <li class="nav-item nav-link">
                <a class="nav-link active">Hello, @UserName</a>
            </li>
            <li class="nav-item avatar dropdown @AvatarCssClass">
                <a class="nav-link dropdown-toggle" id="navbarDropdownMenuLink-55" data-toggle="dropdown"
                    aria-haspopup="true" aria-expanded="false" @onclick="ToggleAvatarMenu">
                    <img src="https://mdbootstrap.com/img/Photos/Avatars/avatar-2.jpg" width="45" height="45" class="rounded-circle z-depth-0"
                    alt="avatar image">
                </a>
                <div class="dropdown-menu dropdown-menu-lg-right dropdown-secondary bg-primary @AvatarCssClass"
                    aria-labelledby="navbarDropdownMenuLink-55">
                    <NavLink class="nav-link dropdown-item bg-primary" href="/user/profile" @onclick="ToggleAvatarMenu">
                        <span class="oi oi-person" aria-hidden="true"></span> Profile
                    </NavLink>
                    <NavLink class="nav-link dropdown-item bg-primary" href="/" @onclick="(() => Logout())">
                        <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                    </NavLink>
                </div>
            </li>
        </ul>
    </Authorized>
</AuthorizeView>

@code {
    public string UserName { get; set; }

    private bool showAvatarMenu = false;

    private string AvatarCssClass => showAvatarMenu ? "show" : null;

    private void ToggleAvatarMenu()
    {
        showAvatarMenu = !showAvatarMenu;
    }

    public async Task Logout()
    {
        await AuthenticationStateProvider.MarkUserAsLoggedOutAsync();

        NavigationManager.NavigateTo("", true);
    }

    protected override async Task OnInitializedAsync()
    {
        if ((await LocalStorage.ContainKeyAsync("UserName")))
        {
            UserName = await LocalStorage.GetItemAsync<string>("UserName");
        }
    }
}